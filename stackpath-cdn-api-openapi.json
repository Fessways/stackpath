{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0",
        "title": "StackPath CDN API",
        "description": "",
        "termsOfService": "http:\/\/exmple.com\/license\/"
    },
    "servers": [
        "http:\/\/gateway.stackpath.com\/"
    ],
    "paths": {
        "\/cdn\/v1\/ips": {
            "get": {
                "summary": "Retrieve a list of IP addresses used by the StackPath edge network",
                "description": "",
                "operationId": "GetCDNIPs",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "response_type",
                        "in": "query",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/cdnGetCDNIPsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/cdn\/v1\/origins\/scan": {
            "post": {
                "summary": "Scan an origin from the CDN",
                "description": "Retrieve information regarding an origin, such as its IP address and whether or not it supports SSL.",
                "operationId": "ScanOrigin",
                "deprecated": 0,
                "parameters": []
            }
        }
    },
    "components": {
        "schemas": {
            "GetMetricsResponseMetricSample": {
                "type": "object",
                "properties": {
                    "values": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "values": {
                "type": "array"
            },
            "GetMetricsResponseMetricSeries": {
                "type": "object",
                "properties": {
                    "type": {
                        "description": "",
                        "type": "string"
                    },
                    "key": {
                        "description": "",
                        "type": "string"
                    },
                    "metrics": {
                        "description": "",
                        "type": "array"
                    },
                    "samples": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "metrics": {
                "type": "array"
            },
            "samples": {
                "type": "array"
            },
            "PurgeContentRequestItem": {
                "type": "object",
                "properties": {
                    "url": {
                        "description": "",
                        "type": "string"
                    },
                    "recursive": {
                        "description": "",
                        "type": "boolean"
                    },
                    "invalidateOnly": {
                        "description": "",
                        "type": "boolean"
                    },
                    "purgeAllDynamic": {
                        "description": "This is ignored if recursive is true.",
                        "type": "boolean"
                    },
                    "headers": {
                        "description": "",
                        "type": "array"
                    },
                    "purgeSelector": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "headers": {
                "type": "array"
            },
            "purgeSelector": {
                "type": "array"
            },
            "PurgeContentRequestPurgeSelector": {
                "type": "object",
                "properties": {
                    "selectorType": {
                        "description": "",
                        "type": ""
                    },
                    "selectorName": {
                        "description": "",
                        "type": "string"
                    },
                    "selectorValue": {
                        "description": "",
                        "type": "string"
                    },
                    "selectorValueDelimiter": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "selectorType": {
                "type": "object"
            },
            "ScanOriginResponseOriginScanSSLDetails": {
                "type": "object",
                "properties": {
                    "valid": {
                        "description": "",
                        "type": "boolean"
                    },
                    "error": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "apiStatus": {
                "type": "object",
                "properties": {
                    "code": {
                        "description": "",
                        "type": "integer"
                    },
                    "error": {
                        "description": "",
                        "type": "string"
                    },
                    "details": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "details": {
                "type": "array"
            },
            "apiStatusDetail": {
                "type": "object",
                "properties": {
                    "@type": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "cdnCertificate": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "fingerprint": {
                        "description": "",
                        "type": "string"
                    },
                    "commonName": {
                        "description": "",
                        "type": "string"
                    },
                    "issuer": {
                        "description": "",
                        "type": "string"
                    },
                    "caBundle": {
                        "description": "",
                        "type": "string"
                    },
                    "trusted": {
                        "description": "",
                        "type": "boolean"
                    },
                    "expirationDate": {
                        "description": "",
                        "type": "string"
                    },
                    "createDate": {
                        "description": "",
                        "type": "string"
                    },
                    "updateDate": {
                        "description": "",
                        "type": "string"
                    },
                    "subjectAlternativeNames": {
                        "description": "Certificates for multiple domains define their domains in certificate's SAN list.",
                        "type": "array"
                    },
                    "status": {
                        "description": "",
                        "type": ""
                    },
                    "providerManaged": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "subjectAlternativeNames": {
                "type": "array"
            },
            "status": {
                "type": "object"
            },
            "cdnConnectScopeToOriginRequest": {
                "type": "object",
                "properties": {
                    "origin": {
                        "description": "",
                        "type": ""
                    },
                    "priority": {
                        "description": "If a CDN scope is powered by more than one origin, then the one with the lower priority number takes higher precedence.",
                        "type": "integer"
                    },
                    "originId": {
                        "description": "This is useful for connecting to a shared origin.",
                        "type": "string"
                    }
                }
            },
            "origin": {
                "type": "array"
            },
            "cdnConnectScopeToOriginRequestOrigin": {
                "type": "object",
                "properties": {
                    "path": {
                        "description": "Paths default to \"\/\"",
                        "type": "string"
                    },
                    "hostname": {
                        "description": "",
                        "type": "string"
                    },
                    "port": {
                        "description": "",
                        "type": "integer"
                    },
                    "securePort": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "cdnConnectScopeToOriginResponse": {
                "type": "object",
                "properties": {
                    "scopeOrigin": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "scopeOrigin": {
                "type": "object"
            },
            "cdnConnectSiteToCertificateResponse": {
                "type": "object",
                "properties": {
                    "siteCertificate": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "siteCertificate": {
                "type": "object"
            },
            "cdnCreateCertificateRequest": {
                "type": "object",
                "properties": {
                    "certificate": {
                        "description": "",
                        "type": "string"
                    },
                    "key": {
                        "description": "",
                        "type": "string"
                    },
                    "caBundle": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "cdnCreateCertificateResponse": {
                "type": "object",
                "properties": {
                    "cdnCertificate": {
                        "description": "",
                        "type": "object"
                    },
                    "certificate": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "cdnCreateScopeHostnameRequest": {
                "type": "object",
                "properties": {
                    "domain": {
                        "description": "",
                        "type": "string"
                    },
                    "disableTransparentMode": {
                        "description": "When true, this call adds the hostname to a CDN site's scope instead of loading from a CDN site's WAF scope, if the site has WAF service.",
                        "type": "boolean"
                    }
                }
            },
            "cdnCreateScopeHostnameResponse": {
                "type": "object",
                "properties": {
                    "hostname": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "hostname": {
                "type": "object"
            },
            "cdnCreateScopeRequest": {
                "type": "object",
                "properties": {
                    "path": {
                        "description": "Paths default to \"\/\"",
                        "type": "string"
                    },
                    "platform": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "cdnCreateScopeResponse": {
                "type": "object",
                "properties": {
                    "scope": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "scope": {
                "type": "object"
            },
            "cdnCreateScopeRuleRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "slug": {
                        "description": "",
                        "type": "string"
                    },
                    "configuration": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "configuration": {
                "type": "object"
            },
            "cdnCreateScopeRuleResponse": {
                "type": "object",
                "properties": {
                    "rule": {
                        "description": "",
                        "type": ""
                    },
                    "configuration": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "rule": {
                "type": "object"
            },
            "cdnCreateSiteRequest": {
                "type": "object",
                "properties": {
                    "domain": {
                        "description": "",
                        "type": "string"
                    },
                    "origin": {
                        "description": "",
                        "type": ""
                    },
                    "features": {
                        "description": "",
                        "type": "array"
                    },
                    "type": {
                        "description": "",
                        "type": ""
                    },
                    "configuration": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "features": {
                "type": "array"
            },
            "type": {
                "type": "object"
            },
            "cdnCreateSiteRequestOrigin": {
                "type": "object",
                "properties": {
                    "path": {
                        "description": "Paths default to \"\/\"",
                        "type": "string"
                    },
                    "hostname": {
                        "description": "",
                        "type": "string"
                    },
                    "port": {
                        "description": "",
                        "type": "integer"
                    },
                    "securePort": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "cdnCreateSiteResponse": {
                "type": "object",
                "properties": {
                    "site": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "site": {
                "type": "object"
            },
            "cdnCreateSiteScriptRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "code": {
                        "description": "",
                        "type": "string"
                    },
                    "paths": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "paths": {
                "type": "array"
            },
            "cdnCreateSiteScriptResponse": {
                "type": "object",
                "properties": {
                    "script": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "script": {
                "type": "object"
            },
            "cdnDnsVerificationDetails": {
                "type": "object",
                "properties": {
                    "dnsRecords": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "dnsRecords": {
                "type": "array"
            },
            "cdnGetCDNIPsResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "results": {
                "type": "array"
            },
            "cdnGetCertificateResponse": {
                "type": "object",
                "properties": {
                    "cdnCertificate": {
                        "description": "",
                        "type": "object"
                    },
                    "certificate": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "cdnGetCertificateSitesResponse": {
                "type": "object",
                "properties": {
                    "pageInfo": {
                        "description": "",
                        "type": ""
                    },
                    "results": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "pageInfo": {
                "type": "object"
            },
            "cdnGetCertificateVerificationDetailsResponse": {
                "type": "object",
                "properties": {
                    "manualVerificationRequired": {
                        "description": "",
                        "type": "boolean"
                    },
                    "verificationRequirements": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "verificationRequirements": {
                "type": "array"
            },
            "cdnGetCertificatesResponse": {
                "type": "object",
                "properties": {
                    "pageInfo": {
                        "description": "",
                        "type": ""
                    },
                    "results": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "cdnGetClosestPopsResponse": {
                "type": "object",
                "properties": {
                    "result": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "result": {
                "type": "array"
            },
            "cdnGetMetricsResponse": {
                "type": "object",
                "properties": {
                    "series": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "series": {
                "type": "array"
            },
            "cdnGetOriginResponse": {
                "type": "object",
                "properties": {
                    "origin": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "cdnGetOriginsResponse": {
                "type": "object",
                "properties": {
                    "pageInfo": {
                        "description": "",
                        "type": ""
                    },
                    "results": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "cdnGetPopsResponse": {
                "type": "object",
                "properties": {
                    "pageInfo": {
                        "description": "",
                        "type": ""
                    },
                    "results": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "cdnGetPurgeStatusResponse": {
                "type": "object",
                "properties": {
                    "progress": {
                        "description": "",
                        "type": "number"
                    }
                }
            },
            "cdnGetScopeConfigurationResponse": {
                "type": "object",
                "properties": {
                    "configuration": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "cdnGetScopeHostnamesResponse": {
                "type": "object",
                "properties": {
                    "pageInfo": {
                        "description": "",
                        "type": ""
                    },
                    "results": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "cdnGetScopeOriginsResponse": {
                "type": "object",
                "properties": {
                    "pageInfo": {
                        "description": "",
                        "type": ""
                    },
                    "results": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "cdnGetScopeRuleConfigurationResponse": {
                "type": "object",
                "properties": {
                    "configuration": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "cdnGetScopeRuleResponse": {
                "type": "object",
                "properties": {
                    "rule": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "cdnGetScopeRulesResponse": {
                "type": "object",
                "properties": {
                    "pageInfo": {
                        "description": "",
                        "type": ""
                    },
                    "results": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "cdnGetSiteCertificatesResponse": {
                "type": "object",
                "properties": {
                    "pageInfo": {
                        "description": "",
                        "type": ""
                    },
                    "results": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "cdnGetSiteDnsTargetsResponse": {
                "type": "object",
                "properties": {
                    "addresses": {
                        "description": "A site's hostname should point to these CNAME targets in order for traffic to be sent through StackPath's edge nodes.",
                        "type": "array"
                    }
                }
            },
            "addresses": {
                "type": "array"
            },
            "cdnGetSiteResponse": {
                "type": "object",
                "properties": {
                    "site": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "cdnGetSiteScopesResponse": {
                "type": "object",
                "properties": {
                    "pageInfo": {
                        "description": "",
                        "type": ""
                    },
                    "results": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "cdnGetSiteScriptResponse": {
                "type": "object",
                "properties": {
                    "script": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "cdnGetSiteScriptsResponse": {
                "type": "object",
                "properties": {
                    "pageInfo": {
                        "description": "",
                        "type": ""
                    },
                    "results": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "cdnGetSitesResponse": {
                "type": "object",
                "properties": {
                    "pageInfo": {
                        "description": "",
                        "type": ""
                    },
                    "results": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "cdnHostname": {
                "type": "object",
                "properties": {
                    "domain": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "cdnPop": {
                "type": "object",
                "properties": {
                    "code": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "latitude": {
                        "description": "",
                        "type": "number"
                    },
                    "longitude": {
                        "description": "",
                        "type": "number"
                    }
                }
            },
            "cdnPopScanReport": {
                "type": "object",
                "properties": {
                    "popCode": {
                        "description": "",
                        "type": "string"
                    },
                    "connectMs": {
                        "description": "",
                        "type": "number"
                    },
                    "dnsMs": {
                        "description": "",
                        "type": "number"
                    },
                    "downloadMs": {
                        "description": "",
                        "type": "number"
                    },
                    "firstByteMs": {
                        "description": "",
                        "type": "number"
                    },
                    "sslMs": {
                        "description": "",
                        "type": "number"
                    },
                    "totalMs": {
                        "description": "",
                        "type": "number"
                    }
                }
            },
            "cdnPurgeContentRequest": {
                "type": "object",
                "properties": {
                    "items": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "items": {
                "type": "array"
            },
            "cdnPurgeContentResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "cdnRequestCertificateRequest": {
                "type": "object",
                "properties": {
                    "hosts": {
                        "description": "If no hosts are provided, all delivery domains on the site will be included with the first one in the list being used as the common name.  If hosts are provided, the first entry will be used as the common name.\n\nAll entries in the list are validated against the existing delivery domains for the provided site.",
                        "type": "array"
                    }
                }
            },
            "hosts": {
                "type": "array"
            },
            "cdnRequestCertificateResponse": {
                "type": "object",
                "properties": {
                    "cdnCertificate": {
                        "description": "",
                        "type": "object"
                    },
                    "certificate": {
                        "description": "",
                        "type": ""
                    },
                    "verificationRequirements": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "cdnScanOriginRequest": {
                "type": "object",
                "properties": {
                    "domain": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "cdnScanOriginResponse": {
                "type": "object",
                "properties": {
                    "ipAddress": {
                        "description": "",
                        "type": "string"
                    },
                    "hostname": {
                        "description": "",
                        "type": "string"
                    },
                    "ScanOriginResponseOriginScanSSLDetails": {
                        "description": "",
                        "type": "object"
                    },
                    "sslDetails": {
                        "description": "",
                        "type": ""
                    },
                    "domainInUse": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "cdnScope": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "platform": {
                        "description": "",
                        "type": "string"
                    },
                    "path": {
                        "description": "Paths default to \"\/\"",
                        "type": "string"
                    }
                }
            },
            "cdnScopeOrigin": {
                "type": "object",
                "properties": {
                    "priority": {
                        "description": "If a CDN scope is powered by more than one origin, then the one with the lower priority number takes higher precedence.",
                        "type": "integer"
                    },
                    "origin": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "cdnScopeRule": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "slug": {
                        "description": "",
                        "type": "string"
                    },
                    "createdAt": {
                        "description": "",
                        "type": "string"
                    },
                    "updatedAt": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "cdnSite": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "stackId": {
                        "description": "",
                        "type": "string"
                    },
                    "label": {
                        "description": "Site names correspond to their fully-qualified domain name.",
                        "type": "string"
                    },
                    "status": {
                        "description": "Site status is controlled by StackPath as sites are provisioned and managed by StackPath's accounting and security teams.",
                        "type": "string"
                    },
                    "createdAt": {
                        "description": "",
                        "type": "string"
                    },
                    "updatedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "features": {
                        "description": "",
                        "type": "array"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "type": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "cdnSiteCertificate": {
                "type": "object",
                "properties": {
                    "valid": {
                        "description": "",
                        "type": "boolean"
                    },
                    "cdnCertificate": {
                        "description": "",
                        "type": "object"
                    },
                    "certificate": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "cdnSiteScript": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "stackId": {
                        "description": "",
                        "type": "string"
                    },
                    "siteId": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "version": {
                        "description": "Version numbers start at 1 and are incremented every time the script is updated.",
                        "type": "string"
                    },
                    "code": {
                        "description": "",
                        "type": "string"
                    },
                    "paths": {
                        "description": "",
                        "type": "array"
                    },
                    "createdAt": {
                        "description": "",
                        "type": "string"
                    },
                    "updatedAt": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "cdnUpdateCertificateRequest": {
                "type": "object",
                "properties": {
                    "certificate": {
                        "description": "",
                        "type": "string"
                    },
                    "key": {
                        "description": "",
                        "type": "string"
                    },
                    "caBundle": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "cdnUpdateCertificateResponse": {
                "type": "object",
                "properties": {
                    "cdnCertificate": {
                        "description": "",
                        "type": "object"
                    },
                    "certificate": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "cdnUpdateOriginRequest": {
                "type": "object",
                "properties": {
                    "path": {
                        "description": "Paths default to \"\/\"",
                        "type": "string"
                    },
                    "hostname": {
                        "description": "",
                        "type": "string"
                    },
                    "port": {
                        "description": "",
                        "type": "integer"
                    },
                    "securePort": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "cdnUpdateOriginResponse": {
                "type": "object",
                "properties": {
                    "origin": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "cdnUpdateScopeConfigurationRequest": {
                "type": "object",
                "properties": {
                    "configuration": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "cdnUpdateScopeConfigurationResponse": {
                "type": "object",
                "properties": {
                    "configuration": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "cdnUpdateScopeRuleConfigurationRequest": {
                "type": "object",
                "properties": {
                    "configuration": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "cdnUpdateScopeRuleConfigurationResponse": {
                "type": "object",
                "properties": {
                    "configuration": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "cdnUpdateSiteCertificateHostsRequest": {
                "type": "object",
                "properties": {
                    "hosts": {
                        "description": "If no hosts are provided, all delivery domains on the site will be included with the first one in the list being used as the common name.  If hosts are provided, the first entry will be used as the common name.\n\nAll entries in the list are validated against the existing delivery domains for the provided site.",
                        "type": "array"
                    }
                }
            },
            "cdnUpdateSiteScriptRequest": {
                "type": "object",
                "properties": {
                    "code": {
                        "description": "",
                        "type": "string"
                    },
                    "paths": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "cdnUpdateSiteScriptResponse": {
                "type": "object",
                "properties": {
                    "cdnSiteScript": {
                        "description": "EdgeEngine scripts are hosted and executed on StackPath's edge nodes.",
                        "type": "object"
                    },
                    "script": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "cdnVerificationRequirements": {
                "type": "object",
                "properties": {
                    "cdnDnsVerificationDetails": {
                        "description": "",
                        "type": "object"
                    },
                    "dnsVerificationDetails": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "cdncustconfOrigin": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "host": {
                        "description": "",
                        "type": "string"
                    },
                    "originPullHeaders": {
                        "description": "String of values delimited by a '|' character.",
                        "type": "string"
                    },
                    "originCacheHeaders": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "custconfAccessLogs": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfAccessLogsConfig": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "extraLogFields": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfAuthACL": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "accessCode": {
                        "description": "",
                        "type": ""
                    },
                    "ipList": {
                        "description": "String of values delimited by a ',' character. This is a list of IP addresses considered for this policy.",
                        "type": "string"
                    },
                    "protocol": {
                        "description": "",
                        "type": ""
                    },
                    "clientIPSrc": {
                        "description": "",
                        "type": ""
                    },
                    "header": {
                        "description": "This allows you to specify the name of a HTTP request header which will contain the client IP address to use for this policy.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "accessCode": {
                "type": "object"
            },
            "protocol": {
                "type": "object"
            },
            "clientIPSrc": {
                "type": "object"
            },
            "custconfAuthGeo": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "code": {
                        "description": "",
                        "type": ""
                    },
                    "values": {
                        "description": "String of values delimited by a ',' character. These are the region codes you are targeting for this policy. The values that can be supplied within this field are those that are supported by the MaxMind\u00ae GeoIP database.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "code": {
                "type": "object"
            },
            "custconfAuthHttpBasic": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "bindingPoint": {
                        "description": "This is a URL to a resource on the authentication server responsible for authentication of users.",
                        "type": "string"
                    },
                    "realm": {
                        "description": "This is the authentication realm given back to the user on requests which do not contain the authentication credentials. Browsers typically display this value to the user when the login credentials are requested.",
                        "type": "string"
                    },
                    "ttl": {
                        "description": "This is the number of seconds the authentication session will be cached by the browsers. After this time, browsers will be asked to present the user credentials again for re-authentication.",
                        "type": "number"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfAuthReferer": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "referer": {
                        "description": "String of values delimited by a '|' character. This is a list of domains authorized to access content from this path in the container. You may use wildcards to specify multiple websites hosted on the same domain.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfAuthUrlAsymmetricSignTlu": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "expireParameterName": {
                        "description": "",
                        "type": "string"
                    },
                    "keyIdParameterName": {
                        "description": "",
                        "type": "string"
                    },
                    "algorithmIdParameterName": {
                        "description": "",
                        "type": "string"
                    },
                    "digestParameterName": {
                        "description": "",
                        "type": "string"
                    },
                    "publicKeyIdMap": {
                        "description": "",
                        "type": "object"
                    },
                    "algorithmIdMap": {
                        "description": "",
                        "type": "object"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "methodFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "pathFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "headerFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "publicKeyIdMap": {
                "type": "object"
            },
            "algorithmIdMap": {
                "type": "object"
            },
            "custconfAuthUrlSign": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "tokenField": {
                        "description": "This is the name of the query string parameter that will be used by the publisher to specify the signature for the URL.",
                        "type": "string"
                    },
                    "ignoreFieldsAfterToken": {
                        "description": "Select this option if you want StackPath to exclude query string parameters specified after the passphrase in the validation process.",
                        "type": "boolean"
                    },
                    "passPhraseField": {
                        "description": "This is the name of the query string parameter that contains the value of the secret. This query string parameter is only used during the generation and validation of a URL signature and should not be present in the published URL.",
                        "type": "string"
                    },
                    "passPhrase": {
                        "description": "The shared secret used during the signing process. This value should only be known by StackPath and systems authorized to sign your content.",
                        "type": "string"
                    },
                    "expiresField": {
                        "description": "This is the name of the query string parameter that contains the Epoch time after which the URL is considered invalid.",
                        "type": "string"
                    },
                    "ipAddressField": {
                        "description": "This is a query string parameter that contains an IPv4 address to which the published URL will be restricted.",
                        "type": "string"
                    },
                    "uriLengthField": {
                        "description": "This is a query string parameter used to limit the number of characters in the path that should be considered when validating the URL signature. This feature allows you to reuse the same signature on all assets stored in the same cache path. Setting this value to 0 will strip off the filename in the URL (leaving the trailing slash) when calculating the checksum.",
                        "type": "string"
                    },
                    "userAgentField": {
                        "description": "This is a query string parameter used to restrict the published URL to a specific user agent. Publishers can use this feature during the signing process to ensure that only a specific user agent can access the published content. You do not need to specify the user agent on the published URL. StackPath will use the HTTP User-Agent header value during signature validation.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "methodFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "pathFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "headerFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "custconfAuthUrlSignAliCloudA": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "passPhrase": {
                        "description": "The shared secret used during the signing process. This value should only be known by StackPath and systems authorized to sign your content.",
                        "type": "string"
                    },
                    "tokenField": {
                        "description": "This is the name of the query string parameter that will be used by the publisher to specify the signature for the URL.",
                        "type": "string"
                    },
                    "includeParamsBeforeToken": {
                        "description": "",
                        "type": "boolean"
                    },
                    "expirationExtension": {
                        "description": "",
                        "type": "number"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "methodFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "pathFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "headerFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "custconfAuthUrlSignAliCloudB": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "passPhrase": {
                        "description": "The shared secret used during the signing process. This value should only be known by StackPath and systems authorized to sign your content.",
                        "type": "string"
                    },
                    "expirationExtension": {
                        "description": "",
                        "type": "number"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "methodFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "pathFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "headerFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "custconfAuthUrlSignAliCloudC": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "passPhrase": {
                        "description": "The shared secret used during the signing process. This value should only be known by StackPath and systems authorized to sign your content.",
                        "type": "string"
                    },
                    "expirationExtension": {
                        "description": "",
                        "type": "number"
                    },
                    "tokenField": {
                        "description": "This is the name of the query string parameter that will be used by the publisher to specify the signature for the URL.",
                        "type": "string"
                    },
                    "expireField": {
                        "description": "",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "methodFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "pathFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "headerFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "custconfAuthUrlSignHmacTlu": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "expireParameterName": {
                        "description": "",
                        "type": "string"
                    },
                    "keyIdParameterName": {
                        "description": "",
                        "type": "string"
                    },
                    "algorithmIdParameterName": {
                        "description": "",
                        "type": "string"
                    },
                    "digestParameterName": {
                        "description": "",
                        "type": "string"
                    },
                    "symmetricKeyIdMap": {
                        "description": "",
                        "type": "object"
                    },
                    "algorithmIdMap": {
                        "description": "",
                        "type": "object"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "methodFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "pathFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "headerFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "symmetricKeyIdMap": {
                "type": "object"
            },
            "custconfAuthUrlSignIq": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "secretKey": {
                        "description": "",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "methodFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "pathFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "headerFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "custconfAwsSignedOriginPullV4": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "bucketIdentifier": {
                        "description": "",
                        "type": "string"
                    },
                    "accessKeyId": {
                        "description": "",
                        "type": "string"
                    },
                    "secretAccessKey": {
                        "description": "",
                        "type": "string"
                    },
                    "awsRegion": {
                        "description": "",
                        "type": "string"
                    },
                    "awsService": {
                        "description": "",
                        "type": "string"
                    },
                    "expireTimeSeconds": {
                        "description": "",
                        "type": "number"
                    },
                    "signedHeaders": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "authenticationType": {
                        "description": "",
                        "type": ""
                    },
                    "headerFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "methodFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "pathFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "authenticationType": {
                "type": "object"
            },
            "custconfAwsSignedS3PostV4": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "bucketIdentifier": {
                        "description": "",
                        "type": "string"
                    },
                    "accessKeyId": {
                        "description": "",
                        "type": "string"
                    },
                    "secretAccessKey": {
                        "description": "",
                        "type": "string"
                    },
                    "awsRegion": {
                        "description": "",
                        "type": "string"
                    },
                    "awsService": {
                        "description": "",
                        "type": "string"
                    },
                    "expireTimeSeconds": {
                        "description": "",
                        "type": "number"
                    },
                    "signedHeaders": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "authenticationType": {
                        "description": "",
                        "type": ""
                    },
                    "headerFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "methodFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "pathFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "custconfBandWidthLimit": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "rule": {
                        "description": "String of values delimited by a '|' character. These are pattern match rules to use for applying rate limiting on requests.",
                        "type": "string"
                    },
                    "values": {
                        "description": "String of values delimited by a ',' character. These are the region codes you are targeting for this policy. The values that can be supplied within this field are those that are supported by the MaxMind\u00ae GeoIP database.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfBandWidthRateLimitUnits": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "initial": {
                        "description": "",
                        "type": ""
                    },
                    "sustained": {
                        "description": "",
                        "type": ""
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "initial": {
                "type": "object"
            },
            "sustained": {
                "type": "object"
            },
            "custconfBandwidthRateLimit": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "initialBurstName": {
                        "description": "",
                        "type": "string"
                    },
                    "sustainedRateName": {
                        "description": "",
                        "type": "string"
                    },
                    "initialBurstUnits": {
                        "description": "",
                        "type": ""
                    },
                    "sustainedRateUnits": {
                        "description": "",
                        "type": ""
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "methodFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "pathFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "headerFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "initialBurstUnits": {
                "type": "object"
            },
            "sustainedRateUnits": {
                "type": "object"
            },
            "custconfCacheControl": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "statusCodeMatch": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "maxAge": {
                        "description": "The client TTL controls the lifetime of the asset in the browser's cache. The value entered here will be sent to the browser in the Cache-Control max-age directive for HTTP 1.1 clients and the Expires header for HTTP 1.0 clients.",
                        "type": "integer"
                    },
                    "mustRevalidate": {
                        "description": "Selecting this option instructs the CDN caching servers to insert the must-revalidate directive on all HTTP responses sent to clients.",
                        "type": "boolean"
                    },
                    "synchronizeMaxAge": {
                        "description": "Selecting this option allows the CDN to synchronize the Max-Age header it sends to clients with the remaining TTL of the asset in the cache. This allows assets to expire from the browser cache at the same time they expire from the CDN.",
                        "type": "boolean"
                    },
                    "override": {
                        "description": "This allows you to specify a custom Cache-Control header to be used by the CDN on all HTTP responses targeted by this policy. Note: Do not include the header name (Cache-Control) in this field. Only the value of the header should be specified.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfCacheKeyModification": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "normalizeKeyPathToLowerCase": {
                        "description": "When set, purges and requests for a file will be case insensitive. This setting is useful if you have a case insensitive origin server and would like to avoid duplicating assets.",
                        "type": "boolean"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfClientRequestModification": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "urlPattern": {
                        "description": "",
                        "type": "string"
                    },
                    "urlRewrite": {
                        "description": "",
                        "type": "string"
                    },
                    "headerPattern": {
                        "description": "",
                        "type": "string"
                    },
                    "headerRewrite": {
                        "description": "",
                        "type": "string"
                    },
                    "addHeaders": {
                        "description": "String of values delimited by a '|' character. This is the static HTTP header you want inserted into the CDN request. Start value with \"append:\", \"replace:\" or \"create:\" which defines if Header will be added, replaced or create if not exists. Default is append.",
                        "type": "string"
                    },
                    "flowControl": {
                        "description": "",
                        "type": ""
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "methodFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "pathFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "headerFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "flowControl": {
                "type": "object"
            },
            "custconfClientResponseModification": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "statusCodeRewrite": {
                        "description": "",
                        "type": "number"
                    },
                    "headerPattern": {
                        "description": "",
                        "type": "string"
                    },
                    "headerRewrite": {
                        "description": "",
                        "type": "string"
                    },
                    "addHeaders": {
                        "description": "String of values delimited by a '|' character. This is the static HTTP header you want inserted into the CDN request. Start value with \"append:\", \"replace:\" or \"create:\" which defines if Header will be added, replaced or create if not exists. Default is append.",
                        "type": "string"
                    },
                    "flowControl": {
                        "description": "",
                        "type": ""
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "methodFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "pathFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "headerFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "custconfCompression": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "gzip": {
                        "description": "",
                        "type": "string"
                    },
                    "mime": {
                        "description": "String of values delimited by a ',' character. A list of rules based on MIME types you want the caching servers to use to identify content you want compressed before delivering it to end users.",
                        "type": "string"
                    },
                    "level": {
                        "description": "",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfConfiguration": {
                "type": "object",
                "properties": {
                    "custconfAccessLogs": {
                        "description": "",
                        "type": "object"
                    },
                    "accessLogs": {
                        "description": "",
                        "type": ""
                    },
                    "custconfAccessLogsConfig": {
                        "description": "",
                        "type": "object"
                    },
                    "accessLogsConfig": {
                        "description": "",
                        "type": ""
                    },
                    "authACL": {
                        "description": "IP address restrictions allow you to configure your CDN container to grant or deny a specific IP addresses or range of IP addresses from accessing content cached in a directory in your CDN container.",
                        "type": "array"
                    },
                    "authGeo": {
                        "description": "Geographic restrictions allow you to restrict content to end users in specific locations. The IP address of incoming requests is checked against a current list of IP allocations to countries and to states within the US. If an end user's IP address is not found in the list, they are allowed access to the content by default. The feature has both an Include and an Exclude list which are used to target the allowed audience.",
                        "type": "array"
                    },
                    "custconfAuthHttpBasic": {
                        "description": "HTTP basic authentication policies allow you to control access to your content by requiring the end user to enter a valid username and password before gaining access to content.",
                        "type": "object"
                    },
                    "authHttpBasic": {
                        "description": "",
                        "type": ""
                    },
                    "custconfAuthReferer": {
                        "description": "HTTP Referrer restriction policies allow you to limit access to your published CDN URLs based on the HTTP Referrer header submitted by the browser. This restriction policy prevents your content from being easily distributed on unauthorized websites (also known as hot linking or deep linking). Once this policy is applied to your CDN container, websites that are not listed in this policy will be denied access to the content cached at this location.",
                        "type": "object"
                    },
                    "authReferer": {
                        "description": "",
                        "type": ""
                    },
                    "authUrlSign": {
                        "description": "URL Signing policies allow you to restrict access to your content by configuring a \"shared secret\" with StackPath. This \"shared secret\" is used to apply an MD5 hashing algorithm on the URL to validate the signature supplied on the request. Since the \"shared secret\" is only known by the publisher and StackPath, URL signatures cannot be generated by unauthorized users.",
                        "type": "array"
                    },
                    "authUrlSignAliCloudA": {
                        "description": "",
                        "type": "array"
                    },
                    "authUrlSignAliCloudB": {
                        "description": "",
                        "type": "array"
                    },
                    "authUrlSignAliCloudC": {
                        "description": "",
                        "type": "array"
                    },
                    "authUrlSignHmacTlu": {
                        "description": "",
                        "type": "array"
                    },
                    "authUrlSignIq": {
                        "description": "",
                        "type": "array"
                    },
                    "authUrlAsymmetricSignTlu": {
                        "description": "",
                        "type": "array"
                    },
                    "custconfBandWidthLimit": {
                        "description": "",
                        "type": "object"
                    },
                    "bandWidthLimit": {
                        "description": "",
                        "type": ""
                    },
                    "custconfBandwidthRateLimit": {
                        "description": "",
                        "type": "object"
                    },
                    "bandwidthRateLimit": {
                        "description": "",
                        "type": ""
                    },
                    "custconfBandWidthRateLimitUnits": {
                        "description": "The Bandwidth Throttling Units policy allows you to override the default units used by the CDN when processing the bandwidth throttling policies.",
                        "type": "object"
                    },
                    "bandWidthRateLimitUnits": {
                        "description": "",
                        "type": ""
                    },
                    "cacheControl": {
                        "description": "The browser caching policy allows you to control the browser caching behavior of your assets independently from the CDN cache. For example, this policy allows you to set lower or higher TTLs for the browser than those of the CDN cache.",
                        "type": "array"
                    },
                    "custconfCacheKeyModification": {
                        "description": "The Cache Key Modification policy allows for manipulation of the way the cache uniquely stores assets.",
                        "type": "object"
                    },
                    "cacheKeyModification": {
                        "description": "",
                        "type": ""
                    },
                    "clientRequestModification": {
                        "description": "",
                        "type": "array"
                    },
                    "clientResponseModification": {
                        "description": "",
                        "type": "array"
                    },
                    "custconfCompression": {
                        "description": "The compression policy allows you to provide a list of file extensions you want the CDN caching servers to automatically compress before delivering content to end users. This policy is typically used when your origin server does not support compression or you are unable to configure your origin to compress your files. If your origin is configured to already compress files, you should consider adding the Compressed Origin Pull policy to your host, which will enable the CDN caching server to request compressed (gzip) version of your assets. The compressed origin pull policy can be found in the Origin Pull policies list. Please note that our caching servers schedule the compression of files, and typically you do not see the compressed delivery until the file has been requested several times. Typically, this list is comprised of text files like javascript, html and CSS files. You should not include file extensions that match media files (images, videos, or audio files) or any other file format that includes a built in compression algorithm. Attempting to further compress these types of files usually results in a larger file being delivered to end users.",
                        "type": "object"
                    },
                    "compression": {
                        "description": "",
                        "type": ""
                    },
                    "contentDispositionByURL": {
                        "description": "",
                        "type": ""
                    },
                    "contentDispositionByHeader": {
                        "description": "The content disposition by HTTP header match policy allows you to control the Content-Disposition delivered by the CDN using a pattern match against the value of any HTTP header present in the request. If you are using URL query string parameters to control the Content-Disposition header (using the Content Disposition by URL policy) then the Content-Disposition header generated by this policy will not be used on that specific request. A typical use case for this policy is to set a different Content-Disposition header based on the User-Agent in the request.",
                        "type": "array"
                    },
                    "customer": {
                        "description": "",
                        "type": ""
                    },
                    "customHeader": {
                        "description": "",
                        "type": ""
                    },
                    "customMimeType": {
                        "description": "The custom mime type policy allows you to map file extensions to specific mime types for the CDN caching servers to use when delivering assets. The mime types you map using this policy may also be limited to specific response codes to address scenarios in which the mime type changes based on the response code.",
                        "type": "array"
                    },
                    "dynamicCacheRule": {
                        "description": "Client response based on Rules.",
                        "type": "array"
                    },
                    "dynamicContent": {
                        "description": "The dynamic content caching policy allows you to specify a set of query string and\/or HTTP header key\/value pairs that should create a unique cache entry for a given URL. This policy is useful when your origin returns unique content for the same URL based on a set of query string parameters provided in the request.",
                        "type": "array"
                    },
                    "failSafeOriginPull": {
                        "description": "",
                        "type": ""
                    },
                    "farAheadRangeProxy": {
                        "description": "",
                        "type": ""
                    },
                    "fileSegmentation": {
                        "description": "",
                        "type": ""
                    },
                    "varyHeaderField": {
                        "description": "",
                        "type": ""
                    },
                    "flvPseudoStreaming": {
                        "description": "",
                        "type": ""
                    },
                    "gzipOriginPull": {
                        "description": "",
                        "type": ""
                    },
                    "httpMethods": {
                        "description": "",
                        "type": ""
                    },
                    "origin": {
                        "description": "",
                        "type": "array"
                    },
                    "originPersistentConnections": {
                        "description": "",
                        "type": ""
                    },
                    "originPull": {
                        "description": "",
                        "type": ""
                    },
                    "originPullCacheExtension": {
                        "description": "",
                        "type": ""
                    },
                    "originPullHost": {
                        "description": "",
                        "type": "array"
                    },
                    "originPullProtocol": {
                        "description": "",
                        "type": ""
                    },
                    "originPullLogs": {
                        "description": "",
                        "type": ""
                    },
                    "originPullLogsConfig": {
                        "description": "",
                        "type": ""
                    },
                    "originPullPolicy": {
                        "description": "The CDN caching policy allows you to control how your origin's content is cached on the CDN.",
                        "type": "array"
                    },
                    "originRequestModification": {
                        "description": "",
                        "type": "array"
                    },
                    "originResponseModification": {
                        "description": "",
                        "type": "array"
                    },
                    "queryStrParam": {
                        "description": "",
                        "type": ""
                    },
                    "receiptLogsConfig": {
                        "description": "",
                        "type": ""
                    },
                    "redirectExceptions": {
                        "description": "",
                        "type": ""
                    },
                    "redirectMappings": {
                        "description": "The response code redirection policy allows you to map cache response codes to an HTTP redirect response. When this policy is applied to a host, the caching servers will redirect clients to the URL specified in this policy instead of delivering the response code you mapped in the policy.",
                        "type": "array"
                    },
                    "responseHeader": {
                        "description": "",
                        "type": ""
                    },
                    "robotsTxt": {
                        "description": "",
                        "type": "array"
                    },
                    "awsSignedOriginPullV4": {
                        "description": "",
                        "type": "array"
                    },
                    "awsSignedS3PostV4": {
                        "description": "",
                        "type": "array"
                    },
                    "staticHeader": {
                        "description": "The static header injection policy allows you to insert headers into the CDN request and response processor.",
                        "type": "array"
                    },
                    "timePseudoStreaming": {
                        "description": "",
                        "type": ""
                    },
                    "http2Support": {
                        "description": "",
                        "type": ""
                    },
                    "vHost": {
                        "description": "A hostname policy allows you to specify an alternate domain name that you want to use to access content from your CDN container.",
                        "type": "array"
                    }
                }
            },
            "authACL": {
                "type": "array"
            },
            "authGeo": {
                "type": "array"
            },
            "authUrlSign": {
                "type": "array"
            },
            "authUrlSignAliCloudA": {
                "type": "array"
            },
            "authUrlSignAliCloudB": {
                "type": "array"
            },
            "authUrlSignAliCloudC": {
                "type": "array"
            },
            "authUrlSignHmacTlu": {
                "type": "array"
            },
            "authUrlSignIq": {
                "type": "array"
            },
            "authUrlAsymmetricSignTlu": {
                "type": "array"
            },
            "cacheControl": {
                "type": "array"
            },
            "clientRequestModification": {
                "type": "array"
            },
            "clientResponseModification": {
                "type": "array"
            },
            "contentDispositionByURL": {
                "type": "object"
            },
            "contentDispositionByHeader": {
                "type": "array"
            },
            "customer": {
                "type": "object"
            },
            "customHeader": {
                "type": "object"
            },
            "customMimeType": {
                "type": "array"
            },
            "dynamicCacheRule": {
                "type": "array"
            },
            "dynamicContent": {
                "type": "array"
            },
            "failSafeOriginPull": {
                "type": "object"
            },
            "farAheadRangeProxy": {
                "type": "object"
            },
            "fileSegmentation": {
                "type": "object"
            },
            "varyHeaderField": {
                "type": "object"
            },
            "flvPseudoStreaming": {
                "type": "object"
            },
            "gzipOriginPull": {
                "type": "object"
            },
            "httpMethods": {
                "type": "object"
            },
            "originPersistentConnections": {
                "type": "object"
            },
            "originPull": {
                "type": "object"
            },
            "originPullCacheExtension": {
                "type": "object"
            },
            "originPullHost": {
                "type": "array"
            },
            "originPullProtocol": {
                "type": "object"
            },
            "originPullLogs": {
                "type": "object"
            },
            "originPullLogsConfig": {
                "type": "object"
            },
            "originPullPolicy": {
                "type": "array"
            },
            "originRequestModification": {
                "type": "array"
            },
            "originResponseModification": {
                "type": "array"
            },
            "queryStrParam": {
                "type": "object"
            },
            "receiptLogsConfig": {
                "type": "object"
            },
            "redirectExceptions": {
                "type": "object"
            },
            "redirectMappings": {
                "type": "array"
            },
            "responseHeader": {
                "type": "object"
            },
            "robotsTxt": {
                "type": "array"
            },
            "awsSignedOriginPullV4": {
                "type": "array"
            },
            "awsSignedS3PostV4": {
                "type": "array"
            },
            "staticHeader": {
                "type": "array"
            },
            "timePseudoStreaming": {
                "type": "object"
            },
            "http2Support": {
                "type": "object"
            },
            "vHost": {
                "type": "array"
            },
            "custconfContentDispositionByHeader": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "headerFieldName": {
                        "description": "The setting allows you to specify the name of the HTTP header you'd like to use in the pattern match for this policy.",
                        "type": "string"
                    },
                    "headerValueMatch": {
                        "description": "String of values delimited by a ',' character. A list of glob patterns that apply this policy if any of them match against the value of the header specified.",
                        "type": "string"
                    },
                    "defaultType": {
                        "description": "",
                        "type": ""
                    },
                    "overrideOriginHeader": {
                        "description": "This setting allows you to force the Content-Disposition generated by the CDN for this policy to override the Content-Disposition header cached from your origin.",
                        "type": "boolean"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "methodFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "pathFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "headerFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "defaultType": {
                "type": "object"
            },
            "custconfContentDispositionByURL": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "dispositionNameQSParam": {
                        "description": "This is the name of the query string parameter which contains the file name to use in the Content-Disposition header. This setting is typically used by customers to configure a \"friendly name\" for URLs that have obfuscated file names.",
                        "type": "string"
                    },
                    "dispositionTypeQSParam": {
                        "description": "This is the name of the query string parameter which contains the disposition type to use in the Content-Disposition header. Typically, this value is set to attachment if you want the browser to present the user with a \"File Download\" dialog box and set to inline if you want the browser to render the content inline (play an audio\/video file instead of downloading it).",
                        "type": "string"
                    },
                    "dispositionOverrideQSParam": {
                        "description": "This setting allows you to define a query string parameter that when present in the URL contains a string that should be used for the Content-Disposition header. The string specified in the URL will completely replace the value the CDN would have used based on other policies defined for the Content-Disposition header.",
                        "type": "string"
                    },
                    "overrideOriginHeader": {
                        "description": "This setting allows you to force the Content-Disposition generated by the CDN for this policy to override the Content-Disposition header cached from your origin.",
                        "type": "boolean"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfCustomHeader": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "xForwardedForAuth": {
                        "description": "This is the name of the X-Forwarded-For header you want the CDN to use when making requests to your basic authorization server.",
                        "type": "string"
                    },
                    "xForwardedForOrigin": {
                        "description": "This is the name of the X-Forwarded-For header you want the CDN to use when making requests to your origin server.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfCustomMimeType": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "code": {
                        "description": "",
                        "type": "string"
                    },
                    "extensionMap": {
                        "description": "String of values delimited by a ',' character. This is a comma separated list of file extension and mime type pairs that describe the mime type mapping for the CDN caching servers. The file extension and mime type values should be delimited by a colon (:). For example, to map files ending with jpg to the image\/jpeg mime type and files ending with png to image\/png, set this value to: jpg:image\/jpeg,png:image\/png.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "methodFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "pathFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "headerFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "custconfCustomer": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "accessLogFields": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "opLogFields": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "receiptLogFields": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "custconfDynamicCacheRule": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "statusCode": {
                        "description": "",
                        "type": "number"
                    },
                    "headers": {
                        "description": "",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "methodFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "pathFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "headerFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "custconfDynamicContent": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "queryParams": {
                        "description": "String of values delimited by a ',' character. A comma separated list of query string parameters you want to include in the cache key generation. NOTE: This list is ignored when the Key Location is set to header.",
                        "type": "string"
                    },
                    "headerFields": {
                        "description": "String of values delimited by a ',' character. A comma-separated list of glob patterns that represent HTTP request headers you want included in the cache key generation. Via the use of a colon ':', users can define each glob pattern to match a header name only, or the pattern can be used to match both the header name and value. A pattern without a colon ':' is treated as a header name ONLY match. If the pattern matches the header, then all values are used as a part of the cache key. If the pattern contains a colon, the CDN uses the pattern on the left of the colon to match the header. The pattern to the right of the colon is used to match the value. The CDN only uses the header\/value as a part of the cache key if both patterns result in a match. Note, no pattern after a colon indicates an empty header (no value).\nSee the fnmatch manpage for acceptable glob patterns.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "methodFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "pathFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "headerFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "custconfFailSafeOriginPull": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "statusCodeMatch": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "pathFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "custconfFarAheadRangeProxy": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "thresholdBytes": {
                        "description": "",
                        "type": "number"
                    }
                }
            },
            "custconfFileSegmentation": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfFlvPseudoStreaming": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "jumpToByteInitialBytesParam": {
                        "description": "",
                        "type": "string"
                    },
                    "jumpToByteStartOffsetParam": {
                        "description": "",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfGzipOriginPull": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfHttp2Support": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfHttpMethods": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "passThru": {
                        "description": "String of values delimited by a ',' character. This is a comma separated list of HTTP methods you want the CDN to proxy to your origin. A wildcard can be entered to include all methods (excluding HEAD and GET).",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfOriginPersistentConnections": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfOriginPull": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "redirectAction": {
                        "description": "",
                        "type": ""
                    },
                    "noQSParams": {
                        "description": "GFS sends a path without any query string parameters when making external origin requests regardless if any parameters were sent by the User-Agent.",
                        "type": "boolean"
                    },
                    "retryMethods": {
                        "description": "String of values delimited by a ',' character. List of HTTP Methods that define types of origin pull requests that can be retried if a failure occurs after sending a previous request.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "redirectAction": {
                "type": "object"
            },
            "custconfOriginPullCacheExtension": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "expiredCacheExtension": {
                        "description": "This is the number of seconds to extend an asset's TTL when the origin is unavailable. The CDN will continue to retry the origin up to the Origin Unavailable Max TTL.",
                        "type": "integer"
                    },
                    "originUnreachableCacheExtension": {
                        "description": "The origin unavailable max TTL value is used by the caching server when your origin is unresponsive or the CDN cannot establish a connection to your origin. Under these conditions, the CDN can continue to serve expired assets from the cache. The value specified in this field establishes a maximum allowable TTL for your expired assets. If your origin connectivity or responsiveness is not corrected within your maximum allowable TTL, the CDN no longer serves your expired assets.",
                        "type": "integer"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfOriginPullHost": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "originUrl": {
                        "description": "",
                        "type": "string"
                    },
                    "userName": {
                        "description": "",
                        "type": "string"
                    },
                    "password": {
                        "description": "",
                        "type": "string"
                    },
                    "methodFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "pathFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "headerFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "custconfOriginPullLogs": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfOriginPullLogsConfig": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "extraLogFields": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfOriginPullPolicy": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "statusCodeMatch": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "expirePolicy": {
                        "description": "",
                        "type": ""
                    },
                    "expireSeconds": {
                        "description": "This is the expiration time used for assets pulled from your origin. When using Cache-Control headers expiration methods, this value is used if your origin doesn't return a max-age directive in the Cache-Control HTTP header. Please note that a value of 0 in this fields instructs the caching server to retain assets for as long as possible.",
                        "type": "integer"
                    },
                    "honorNoStore": {
                        "description": "This enables the processing of no-store HTTP Cache-Control directives on your container. By enabling this option, responses from your origin containing the no-store directive are not cached. Be aware that requests for non-cacheable assets are always forwarded to your origin and may impose a high request and bandwidth load on your origin.",
                        "type": "boolean"
                    },
                    "honorNoCache": {
                        "description": "This enables the processing of no-cache HTTP Cache-Control directives on your container. By enabling this option, responses from your origin containing the no-cache directive force the CDN to submit every subsequent request to your origin for validation before serving the asset stored in the cache.",
                        "type": "boolean"
                    },
                    "honorMustRevalidate": {
                        "description": "",
                        "type": "boolean"
                    },
                    "noCacheBehavior": {
                        "description": "",
                        "type": ""
                    },
                    "maxAgeZeroToNoCache": {
                        "description": "This enables the CDN to apply the no-cache behavior for assets delivered by your origin containing a max-age directive equal to zero.",
                        "type": "boolean"
                    },
                    "mustRevalidateToNoCache": {
                        "description": "This enables the CDN to apply the no-cache behavior for assets delivered by your origin containing the must-revalidate directive.",
                        "type": "boolean"
                    },
                    "bypassCacheIdentifier": {
                        "description": "This allows you to define a custom directive that, when used by your origin in the Cache-Control response headers, forces the CDN to proxy the request to the end user without caching the result.",
                        "type": "string"
                    },
                    "forceBypassCache": {
                        "description": "This forces the CDN to not cache any asset pulled from your origin that would otherwise be stored at this location in the cache. Typically this policy is used to prevent 4XX and 5XX response codes from overwriting a file in the cache when used with corresponding Origin Status Code Match setting. If bypass cache behavior is desired for all assets at a scope, Origin Pull Queue Behavior in the Origin Pull Settings also needs to be set to NOCACHE for that scope.",
                        "type": "boolean"
                    },
                    "httpHeaders": {
                        "description": "String of values delimited by a ',' character. This is the list of your origin's HTTP headers that you want the CDN to cache and deliver to end users.",
                        "type": "string"
                    },
                    "honorPrivate": {
                        "description": "This enables the processing of private HTTP Cache-Control directives on your container. By enabling this option, responses from your origin containing the private directive are not cached. Be aware that requests for non-cacheable assets are always forwarded to your origin and may impose a high request and bandwidth load on your origin.",
                        "type": "boolean"
                    },
                    "honorSMaxAge": {
                        "description": "This enables the processing of s-maxage HTTP Cache-Control directives on your container. By enabling this option, the s-maxage HTTP Cache-Control directive in the responses from your origin takes precedence over the max-age directive. If both max-age and s-maxage need to be preserved in the client response, the Cache-Control header must be added to the \"Http Header Caching\" setting.",
                        "type": "boolean"
                    },
                    "updateHttpHeadersOn304Response": {
                        "description": "",
                        "type": "boolean"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "methodFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "pathFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "headerFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "expirePolicy": {
                "type": "object"
            },
            "noCacheBehavior": {
                "type": "object"
            },
            "custconfOriginPullProtocol": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "protocol": {
                        "description": "",
                        "type": ""
                    },
                    "enableSNI": {
                        "description": "This key allows you to configure the CDN caching servers to use SNI while making Secured Connection to Origin.",
                        "type": "boolean"
                    }
                }
            },
            "custconfOriginRequestModification": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "urlPattern": {
                        "description": "",
                        "type": "string"
                    },
                    "urlRewrite": {
                        "description": "",
                        "type": "string"
                    },
                    "headerPattern": {
                        "description": "",
                        "type": "string"
                    },
                    "headerRewrite": {
                        "description": "",
                        "type": "string"
                    },
                    "addHeaders": {
                        "description": "String of values delimited by a '|' character. This is the static HTTP header you want inserted into the CDN request. Start value with \"append:\", \"replace:\" or \"create:\" which defines if Header will be added, replaced or create if not exists. Default is append.",
                        "type": "string"
                    },
                    "flowControl": {
                        "description": "",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "methodFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "pathFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "headerFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "custconfOriginResponseModification": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "statusCodeRewrite": {
                        "description": "",
                        "type": "number"
                    },
                    "headerPattern": {
                        "description": "",
                        "type": "string"
                    },
                    "headerRewrite": {
                        "description": "",
                        "type": "string"
                    },
                    "addHeaders": {
                        "description": "String of values delimited by a '|' character. This is the static HTTP header you want inserted into the CDN request. Start value with \"append:\", \"replace:\" or \"create:\" which defines if Header will be added, replaced or create if not exists. Default is append.",
                        "type": "string"
                    },
                    "flowControl": {
                        "description": "",
                        "type": ""
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "methodFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "pathFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "headerFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "custconfQueryStrParam": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "dispositionName": {
                        "description": "This is the name of the query string parameter which contains the name of the file to specify in the Content-Disposition HTTP response header. This setting is typically used by customers to configure a \"friendly name\" for URLs that have obfuscated file names. This setting controls the \"filename\" directive that is part of the Content-Disposition HTTP header.",
                        "type": "string"
                    },
                    "dispositionType": {
                        "description": "This is the name of the query string parameter which contains the disposition type to use in the Content-Disposition HTTP header. Typically, this value is set to \"attachment,\" but you may supply a custom string using this setting.",
                        "type": "string"
                    },
                    "dispositionOverride": {
                        "description": "This setting allows you to completely override the Content-Disposition HTTP header that the CDN caching servers use on a response.",
                        "type": "string"
                    },
                    "jumpToTimeStart": {
                        "description": "This is the name of the query string parameter that indicates to the CDN the start time offset of the video returned. This parameter is part of the jump-to-time feature that is initiated on a per request basis.",
                        "type": "string"
                    },
                    "jumpToTimeEnd": {
                        "description": "This is the name of the query string parameter that indicates to the CDN the end time offset of the video that should be returned. This parameter is part of the jump-to-time feature that is initiated on a per request basis.",
                        "type": "string"
                    },
                    "jumpToByteInitialBytes": {
                        "description": "This is the  name of the query string parameter that indicates to the CDN the initial bytes of a video that should be returned before sending the requested byte offset. This parameter is part of the jump-to-byte feature that is initiated on a per request basis.",
                        "type": "string"
                    },
                    "jumpToByteStartOffset": {
                        "description": "This is the name of the query string parameter that indicates to the CDN the specific offset into the video that is being requested. This parameter is part of the jump-to-byte feature that is initiated on a per request basis.",
                        "type": "string"
                    },
                    "rateLimitInitial": {
                        "description": "This is the name of the query string parameter that indicates to the CDN an initial burst rate to use when delivering a file. This parameter is part of the bandwidth limiting feature that is initiated on a per request basis.",
                        "type": "string"
                    },
                    "rateLimitSustained": {
                        "description": "This is the name of the query string parameter that indicates to the CDN the sustained rate being requested for the delivery of a file. This parameter is part of the bandwidth throttling feature that is initiated on a per request basis.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfReceiptLogsConfig": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "extraLogFields": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfRedirectExceptions": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "redirectAgentCode": {
                        "description": "String of values delimited by a ',' character. This is a comma separated list of user agents and redirect code pairs. The user agent and redirect code values are separated by a colon (:), and you may use wildcards in the user agent field. For example, to map assign a 307 status code to all Chrome browsers, you would specify: *chrome*:307.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfRedirectMappings": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "code": {
                        "description": "The HTTP cache response code that applies to this policy.",
                        "type": "number"
                    },
                    "redirectURL": {
                        "description": "The URL that clients would be redirected to when applying this policy.",
                        "type": "string"
                    },
                    "replacementToken": {
                        "description": "A token that will be replaced by the caching server with the URL of the request that triggered the policy. This token can be positioned anywhere in the redirect URL.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "methodFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "pathFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "headerFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "custconfResponseHeader": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "http": {
                        "description": "",
                        "type": "string"
                    },
                    "enableETag": {
                        "description": "This gives the ability to disable the ETag header on the response.",
                        "type": "boolean"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfRobotsTxt": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "file": {
                        "description": "",
                        "type": "string"
                    },
                    "cacheControlHeader": {
                        "description": "",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "methodFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "pathFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "headerFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "custconfStaticHeader": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "clientRequest": {
                        "description": "This is the static HTTP header you want inserted into the CDN request.",
                        "type": "string"
                    },
                    "http": {
                        "description": "",
                        "type": "string"
                    },
                    "originPull": {
                        "description": "This is the HTTP header you want inserted into the origin pull request.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "methodFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "pathFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    },
                    "headerFilter": {
                        "description": "String of values delimited by a ',' character.",
                        "type": "string"
                    }
                }
            },
            "custconfTimePseudoStreaming": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "jumpToTimeStartParam": {
                        "description": "The name of the query string parameter that indicates to the CDN the specific time interval of the video that is being requested.",
                        "type": "string"
                    },
                    "jumpToTimeEndParam": {
                        "description": "The name of the query string parameter that indicates to the CDN the end time of the video that should be returned.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfVHost": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "domain": {
                        "description": "",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "custconfVaryHeaderField": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "valuesFilter": {
                        "description": "String of values deliminated by a ',' character.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "paginationPageInfo": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "description": "",
                        "type": "string"
                    },
                    "hasPreviousPage": {
                        "description": "",
                        "type": "boolean"
                    },
                    "hasNextPage": {
                        "description": "",
                        "type": "boolean"
                    },
                    "startCursor": {
                        "description": "",
                        "type": "string"
                    },
                    "endCursor": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "paginationPageRequest": {
                "type": "object",
                "properties": {
                    "first": {
                        "description": "",
                        "type": "string"
                    },
                    "after": {
                        "description": "",
                        "type": "string"
                    },
                    "filter": {
                        "description": "",
                        "type": "string"
                    },
                    "sortBy": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "schemacdnOrigin": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "path": {
                        "description": "Paths default to \"\/\"",
                        "type": "string"
                    },
                    "hostname": {
                        "description": "",
                        "type": "string"
                    },
                    "port": {
                        "description": "",
                        "type": "integer"
                    },
                    "securePort": {
                        "description": "",
                        "type": "integer"
                    },
                    "dedicated": {
                        "description": "Dedicated origins cannot be used by any site other than that to which it is dedicated.",
                        "type": "boolean"
                    },
                    "siteId": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "stackpath.rpc.BadRequest": {
                "type": "object"
            },
            "stackpath.rpc.BadRequest.FieldViolation": {
                "type": "object",
                "properties": {
                    "field": {
                        "description": "",
                        "type": "string"
                    },
                    "description": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "stackpath.rpc.Help": {
                "type": "object"
            },
            "stackpath.rpc.Help.Link": {
                "type": "object",
                "properties": {
                    "description": {
                        "description": "",
                        "type": "string"
                    },
                    "url": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "stackpath.rpc.LocalizedMessage": {
                "type": "object"
            },
            "stackpath.rpc.PreconditionFailure": {
                "type": "object"
            },
            "stackpath.rpc.PreconditionFailure.Violation": {
                "type": "object",
                "properties": {
                    "type": {
                        "description": "",
                        "type": "string"
                    },
                    "subject": {
                        "description": "",
                        "type": "string"
                    },
                    "description": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "stackpath.rpc.QuotaFailure": {
                "type": "object"
            },
            "stackpath.rpc.QuotaFailure.Violation": {
                "type": "object",
                "properties": {
                    "subject": {
                        "description": "",
                        "type": "string"
                    },
                    "description": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "stackpath.rpc.RequestInfo": {
                "type": "object"
            },
            "stackpath.rpc.ResourceInfo": {
                "type": "object"
            },
            "stackpath.rpc.RetryInfo": {
                "type": "object"
            }
        }
    }
}